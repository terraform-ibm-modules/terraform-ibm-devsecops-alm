{
	"products": [
		{
			"label": "DevSecOps Application Lifecycle Management",
			"name": "deploy-arch-ibm-devsecops-alm",
			"version": "1.0.4",
			"product_kind": "solution",
			"tags": [
				"enterprise_app",
				"ibm_created",
				"ibm_beta"
			],
			"keywords": [
				"DevSecOps Toolchain Compliance"
			],
			"short_description": "DevSecOps provides a set of predefined continuous integration, continuous deployment and continuous compliance toolchain templates.",
			"long_description": "This deployable architecture provides tools to help you deploy your application. See the [getting started guide](https://cloud.ibm.com/docs/devsecops-alm) before beginning. DevSecOps toolchains use Continuous Delivery (Git Repos and Issue Tracking, Tekton Pipelines, DevOps Insights, and Code Risk Analyzer), Secrets Manager, Key Protect, Cloud Object Storage, Container Registry and Vulnerability Advisor. Out of the box, DevSecOps also leverages popular scanning tools such as SonarQube, Gosec, OWASP Zap (dynamic scan), any unit test framework, and GPG signing. It can also be used with more tools such as external Git providers and artifact stores. DevSecOps supports hybrid deployments, in particular by using private pipeline workers, and can be interfaced with other deployment tools such as Satellite Config and ArgoCD.",
			"provider_name": "OTC CD SETUP",
			"offering_docs_url": "https://cloud.ibm.com/docs/devsecops-alm",
			"offering_icon_url": "https://globalcatalog.cloud.ibm.com/api/v1/1082e7d2-5e2f-0a11-a3bc-f88a8e1931fc/artifacts/terraform.svg",
			"features": [
				{
					"title": "DevSecOps  ",
					"description": "A complete end to end GitOps based reference architecture for managing the security posture of your application."
				}
			],
			"flavors": [
				{
					"usage": "Add an example of the use of the module in the following code block.\n\nUse real values instead of \"var.\u003cvar_name\u003e\" or other placeholder values\nunless real values don't help users know what to change.\n--\u003e\n\nibmcloud_api_key          = \"\" #Set your API key\nci_toolchain_name         = \"DevSecOps CI Toolchain - Terraform\"\ncd_toolchain_name         = \"DevSecOps CD Toolchain - Terraform\"\ncc_toolchain_name         = \"DevSecOps CC Toolchain - Terraform\"\ntoolchain_resource_group  = \"Default\"\ntoolchain_region          = \"jp-tok\" #Region short name only\nci_registry_namespace     = \"tektonhh\"\nci_registry_region        = \"ibm:yp:jp-tok\"\nsm_name                   = \"sm-compliance-secrets\" #Secrets Manager instance name\nsm_location               = \"eu-gb\"\nsm_resource_group         = \"Default\"\nsm_secret_group           = \"Default\"\nci_cluster_name           = \"mycluster-free\"\nci_cluster_namespace      = \"dev\"\nci_dev_region             = \"ibm:yp:jp-tok\"\nci_dev_resource_group     = \"Default\"\ncd_cluster_name           = \"mycluster-free\"\ncd_cluster_namespace      = \"prod\"",
					"compliance": {},
					"architecture": {
						"diagrams": [
							{
								"diagram": {
									"url": "https://raw.githubusercontent.com/terraform-ibm-modules/terraform-ibm-devsecops-alm/main/reference-architectures/diagram-deploy-arch-ibm-devsecops-alm-diagram.svg",
									"caption": "DevSecOps Toolchains",
									"type": "image/svg+xml",
									"thumbnail_url": "https://raw.githubusercontent.com/terraform-ibm-modules/terraform-ibm-devsecops-alm/main/reference-architectures/diagram-deploy-arch-ibm-devsecops-alm-diagram.svg"
								},
								"description": "The DevSecOps Application Lifecycle Management deployable architecture consists of three Continuous Delivery Toolchains, one each for development (Continuous Integration), production deployment (Continuous Deployment), and ongoing compliance validation for the deployed app (Continuous Compliance). Together they enable secure and compliant application delivery on IBM Cloud."
							}
						]
					},
					"configuration": [
						{
							"key": "cc_app_group",
							"type": "string",
							"default_value": "",
							"description": "Specify user/group for app repo."
						},
						{
							"key": "cc_app_repo_auth_type",
							"type": "string",
							"default_value": "oauth",
							"description": "Select the method of authentication that is used to access the Git provider. 'oauth' or 'pat'."
						},
						{
							"key": "cc_app_repo_branch",
							"type": "string",
							"default_value": "master",
							"description": "The default branch of the app repo."
						},
						{
							"key": "cc_app_repo_git_id",
							"type": "string",
							"default_value": "",
							"description": "The Git Id of the repository."
						},
						{
							"key": "cc_app_repo_git_provider",
							"type": "string",
							"default_value": "hostedgit",
							"description": "The type of the Git provider."
						},
						{
							"key": "cc_app_repo_git_token_secret_name",
							"type": "string",
							"default_value": "git-token",
							"description": "Name of the Git token secret in the secret provider."
						},
						{
							"key": "cc_app_repo_url",
							"type": "string",
							"default_value": "",
							"description": "This Git URL for the application repository."
						},
						{
							"key": "cc_authorization_policy_creation",
							"type": "string",
							"default_value": "",
							"description": "Disable Toolchain service to Secrets Manager Service authorization policy creation."
						},
						{
							"key": "cc_compliance_base_image",
							"type": "string",
							"default_value": "",
							"description": "Pipeline baseimage to run most of the built-in pipeline code."
						},
						{
							"key": "cc_compliance_pipeline_group",
							"type": "string",
							"default_value": "",
							"description": "Specify user/group for compliance pipline repo."
						},
						{
							"key": "cc_compliance_pipeline_repo_auth_type",
							"type": "string",
							"default_value": "oauth",
							"description": "Select the method of authentication that is used to access the Git provider. 'oauth' or 'pat'."
						},
						{
							"key": "cc_compliance_pipeline_repo_git_token_secret_name",
							"type": "string",
							"default_value": "git-token",
							"description": "Name of the Git token secret in the secret provider."
						},
						{
							"key": "cc_cos_api_key_secret_name",
							"type": "string",
							"default_value": "cos-api-key",
							"description": "Name of the COS API key secret in the secret provider."
						},
						{
							"key": "cc_cos_bucket_name",
							"type": "string",
							"default_value": "",
							"description": "COS bucket name."
						},
						{
							"key": "cc_cos_endpoint",
							"type": "string",
							"default_value": "",
							"description": "COS endpoint name."
						},
						{
							"key": "cc_doi_environment",
							"type": "string",
							"default_value": "",
							"description": "DevOps Insights environment for DevSecOps CD deployment."
						},
						{
							"key": "cc_doi_toolchain_id",
							"type": "string",
							"default_value": "",
							"description": "DevOps Insights toolchain ID to link to."
						},
						{
							"key": "cc_enable_key_protect",
							"type": "boolean",
							"default_value": "__NULL__",
							"description": "Enable the Key Protect integration."
						},
						{
							"key": "cc_enable_secrets_manager",
							"type": "boolean",
							"default_value": "__NULL__",
							"description": "Enable the Secrets Manager integration."
						},
						{
							"key": "cc_enable_slack",
							"type": "boolean",
							"default_value": false,
							"description": "Set to true to create the integration."
						},
						{
							"key": "cc_environment_tag",
							"type": "string",
							"default_value": "prod_latest",
							"description": "Tag name that represents the target environment in the inventory. Example: prod_latest."
						},
						{
							"key": "cc_evidence_group",
							"type": "string",
							"default_value": "",
							"description": "Specify Git user/group for evidence repository."
						},
						{
							"key": "cc_evidence_repo_auth_type",
							"type": "string",
							"default_value": "oauth",
							"description": "Select the method of authentication that is used to access the Git provider. 'oauth' or 'pat'"
						},
						{
							"key": "cc_evidence_repo_git_token_secret_name",
							"type": "string",
							"default_value": "git-token",
							"description": "Name of the Git token secret in the secret provider."
						},
						{
							"key": "cc_inventory_group",
							"type": "string",
							"default_value": "",
							"description": "Specify Git user/group for inventory repository."
						},
						{
							"key": "cc_inventory_repo_auth_type",
							"type": "string",
							"default_value": "oauth",
							"description": "Select the method of authentication that is used to access the Git provider. 'oauth' or 'pat'."
						},
						{
							"key": "cc_inventory_repo_git_token_secret_name",
							"type": "string",
							"default_value": "git-token",
							"description": "Name of the Git token secret in the secret provider."
						},
						{
							"key": "cc_issues_group",
							"type": "string",
							"default_value": "",
							"description": "Specify Git user/group for issues repository."
						},
						{
							"key": "cc_issues_repo_auth_type",
							"type": "string",
							"default_value": "oauth",
							"description": "Select the method of authentication that is used to access the Git provider. 'oauth' or 'pat'."
						},
						{
							"key": "cc_issues_repo_git_token_secret_name",
							"type": "string",
							"default_value": "git-token",
							"description": "Name of the Git token secret in the secret provider."
						},
						{
							"key": "cc_kp_location",
							"type": "string",
							"default_value": "",
							"description": "IBM Cloud location/region containing the Key Protect instance."
						},
						{
							"key": "cc_kp_name",
							"type": "string",
							"default_value": "",
							"description": "Name of the Key Protect instance where the secrets are stored."
						},
						{
							"key": "cc_kp_resource_group",
							"type": "string",
							"default_value": "",
							"description": "The resource group containing the Key Protect instance for your secrets."
						},
						{
							"key": "cc_link_to_doi_toolchain",
							"type": "boolean",
							"default_value": true,
							"description": "Enable a link to a DevOps Insights instance in another toolchain, true or false."
						},
						{
							"key": "cc_opt_in_auto_close",
							"type": "string",
							"default_value": "1",
							"description": "Enables auto-closing of issues coming from vulnerabilities, once the vulnerability is no longer detected by the CC pipeline run."
						},
						{
							"key": "cc_opt_in_dynamic_api_scan",
							"type": "string",
							"default_value": "",
							"description": "To enable the OWASP Zap API scan. '1' enable or '0' disable."
						},
						{
							"key": "cc_opt_in_dynamic_scan",
							"type": "string",
							"default_value": "",
							"description": "To enable the OWASP Zap scan. '1' enable or '0' disable."
						},
						{
							"key": "cc_opt_in_dynamic_ui_scan",
							"type": "string",
							"default_value": "",
							"description": "To enable the OWASP Zap UI scan. '1' enable or '0' disable."
						},
						{
							"key": "cc_pipeline_config_group",
							"type": "string",
							"default_value": "",
							"description": "Specify user/group for pipeline config repo."
						},
						{
							"key": "cc_pipeline_config_path",
							"type": "string",
							"default_value": ".pipeline-config.yaml",
							"description": "The name and path of the pipeline-config.yaml file within the pipeline-config repo."
						},
						{
							"key": "cc_pipeline_config_repo_auth_type",
							"type": "string",
							"default_value": "oauth",
							"description": "Select the method of authentication that is used to access the Git provider. 'oauth' or 'pat'."
						},
						{
							"key": "cc_pipeline_config_repo_branch",
							"type": "string",
							"default_value": "",
							"description": "Specify the branch containing the custom pipeline-config.yaml file."
						},
						{
							"key": "cc_pipeline_config_repo_clone_from_url",
							"type": "string",
							"default_value": "",
							"description": "Specify a repository containing a custom pipeline-config.yaml file."
						},
						{
							"key": "cc_pipeline_config_repo_existing_url",
							"type": "string",
							"default_value": "",
							"description": "Specify a repository containing a custom pipeline-config.yaml file."
						},
						{
							"key": "cc_pipeline_config_repo_git_token_secret_name",
							"type": "string",
							"default_value": "git-token",
							"description": "Name of the Git token secret in the secret provider."
						},
						{
							"key": "cc_pipeline_debug",
							"type": "string",
							"default_value": "0",
							"description": "'0' by default. Set to '1' to enable debug logging."
						},
						{
							"key": "cc_pipeline_ibmcloud_api_key_secret_name",
							"type": "string",
							"default_value": "ibmcloud-api-key",
							"description": "Name of the Cloud API key secret in the secret provider."
						},
						{
							"key": "cc_repositories_prefix",
							"type": "string",
							"default_value": "compliance",
							"description": "The prefix for the compliance repositories."
						},
						{
							"key": "cc_scc_enable_scc",
							"type": "boolean",
							"default_value": false,
							"description": "Enable the SCC integration"
						},
						{
							"key": "cc_scc_integration_name",
							"type": "string",
							"default_value": "Security and Compliance",
							"description": "The name of the SCC integration name."
						},
						{
							"key": "cc_slack_channel_name",
							"type": "string",
							"default_value": "my-channel",
							"description": "The Slack channel that notifications are posted to."
						},
						{
							"key": "cc_slack_notifications",
							"type": "string",
							"default_value": "0",
							"description": "The switch that turns the Slack integration on or off."
						},
						{
							"key": "cc_slack_pipeline_fail",
							"type": "boolean",
							"default_value": true,
							"description": "Generate pipeline failed notifications."
						},
						{
							"key": "cc_slack_pipeline_start",
							"type": "boolean",
							"default_value": true,
							"description": "Generate pipeline start notifications."
						},
						{
							"key": "cc_slack_pipeline_success",
							"type": "boolean",
							"default_value": true,
							"description": "Generate pipeline succeeded notifications."
						},
						{
							"key": "cc_slack_team_name",
							"type": "string",
							"default_value": "my-team",
							"description": "The Slack team name, which is the word or phrase before .slack.com in the team URL."
						},
						{
							"key": "cc_slack_toolchain_bind",
							"type": "boolean",
							"default_value": true,
							"description": "Generate tool added to toolchain notifications."
						},
						{
							"key": "cc_slack_toolchain_unbind",
							"type": "boolean",
							"default_value": true,
							"description": "Generate tool removed from toolchain notifications."
						},
						{
							"key": "cc_slack_webhook_secret_name",
							"type": "string",
							"default_value": "slack-webhook",
							"description": "Name of the webhook secret in the secret provider."
						},
						{
							"key": "cc_sm_location",
							"type": "string",
							"default_value": "",
							"description": "IBM Cloud location/region containing the Secrets Manager instance."
						},
						{
							"key": "cc_sm_name",
							"type": "string",
							"default_value": "",
							"description": "Name of the Secrets Manager instance where the secrets are stored."
						},
						{
							"key": "cc_sm_resource_group",
							"type": "string",
							"default_value": "",
							"description": "The resource group containing the Secrets Manager instance for your secrets."
						},
						{
							"key": "cc_sm_secret_group",
							"type": "string",
							"default_value": "",
							"description": "Group in Secrets Manager for organizing/grouping secrets."
						},
						{
							"key": "cc_sonarqube_config",
							"type": "string",
							"default_value": "default",
							"description": "Runs a SonarQube scan in an isolated Docker-in-Docker container (default configuration) or in an existing Kubernetes cluster (custom configuration). Options: default or custom. Default is default."
						},
						{
							"key": "cc_toolchain_description",
							"type": "string",
							"default_value": "Toolchain created with terraform template for DevSecOps CC Best Practices.",
							"description": "Description for the CC Toolchain."
						},
						{
							"key": "cc_toolchain_name",
							"type": "string",
							"default_value": "DevSecOps CC Toolchain - Terraform",
							"description": "The name of the CC Toolchain.",
							"required": true
						},
						{
							"key": "cc_toolchain_region",
							"type": "string",
							"default_value": "",
							"description": "The region containing the CI toolchain."
						},
						{
							"key": "cc_toolchain_resource_group",
							"type": "string",
							"default_value": "",
							"description": "Resource group within which the toolchain is created."
						},
						{
							"key": "cd_app_version",
							"type": "string",
							"default_value": "v1",
							"description": "The version of the app to deploy."
						},
						{
							"key": "cd_authorization_policy_creation",
							"type": "string",
							"default_value": "",
							"description": "Disable Toolchain service to Secrets Manager Service authorization policy creation."
						},
						{
							"key": "cd_change_management_group",
							"type": "string",
							"default_value": "",
							"description": "Specify group for change management repository"
						},
						{
							"key": "cd_change_management_repo",
							"type": "string",
							"default_value": "",
							"description": "This repository holds the change management requests created for the deployments."
						},
						{
							"key": "cd_change_management_repo_auth_type",
							"type": "string",
							"default_value": "oauth",
							"description": "Select the method of authentication that is used to access the Git provider. 'oauth' or 'pat'."
						},
						{
							"key": "cd_change_management_repo_git_token_secret_name",
							"type": "string",
							"default_value": "git-token",
							"description": "Name of the Git token secret in the secret provider."
						},
						{
							"key": "cd_change_repo_clone_from_url",
							"type": "string",
							"default_value": "",
							"description": "Override the default management repo , which is cloned into the app repo. Note, using clone_if_not_exists mode, so if the app repo already exists the repo contents are unchanged."
						},
						{
							"key": "cd_change_request_id",
							"type": "string",
							"default_value": "notAvailable",
							"description": "The ID of an open change request. If this parameter is set to 'notAvailable' by default, a change request is automatically created by the continuous deployment pipeline."
						},
						{
							"key": "cd_cluster_name",
							"type": "string",
							"default_value": "mycluster-free",
							"description": "Name of the Kubernetes cluster where the application is deployed.",
							"required": true
						},
						{
							"key": "cd_cluster_namespace",
							"type": "string",
							"default_value": "prod",
							"description": "Name of the Kubernetes cluster namespace where the application is deployed.",
							"required": true
						},
						{
							"key": "cd_cluster_region",
							"type": "string",
							"default_value": "ibm:yp:us-south",
							"description": "Region of the Kubernetes cluster where the application is deployed."
						},
						{
							"key": "cd_compliance_base_image",
							"type": "string",
							"default_value": "",
							"description": "Pipeline baseimage to run most of the built-in pipeline code."
						},
						{
							"key": "cd_compliance_pipeline_group",
							"type": "string",
							"default_value": "",
							"description": "Specify user/group for compliance pipline repo."
						},
						{
							"key": "cd_compliance_pipeline_repo_auth_type",
							"type": "string",
							"default_value": "oauth",
							"description": "Select the method of authentication that is used to access the Git provider. 'oauth' or 'pat'."
						},
						{
							"key": "cd_compliance_pipeline_repo_git_token_secret_name",
							"type": "string",
							"default_value": "git-token",
							"description": "Name of the Git token secret in the secret provider."
						},
						{
							"key": "cd_cos_api_key_secret_name",
							"type": "string",
							"default_value": "cos-api-key",
							"description": "Name of the COS API key secret in the secret provider."
						},
						{
							"key": "cd_cos_bucket_name",
							"type": "string",
							"default_value": "",
							"description": "COS bucket name."
						},
						{
							"key": "cd_cos_endpoint",
							"type": "string",
							"default_value": "",
							"description": "COS endpoint name."
						},
						{
							"key": "cd_customer_impact",
							"type": "string",
							"default_value": "no_impact",
							"description": "Custom impact of the change request."
						},
						{
							"key": "cd_deployment_group",
							"type": "string",
							"default_value": "",
							"description": "Specify group for deployment."
						},
						{
							"key": "cd_deployment_repo_auth_type",
							"type": "string",
							"default_value": "oauth",
							"description": "Select the method of authentication that is used to access the Git provider. 'oauth' or 'pat'."
						},
						{
							"key": "cd_deployment_repo_clone_from_branch",
							"type": "string",
							"default_value": "",
							"description": "Used when deployment_repo_clone_from_url is provided, the default branch that is used by the CD build, usually either main or master."
						},
						{
							"key": "cd_deployment_repo_clone_from_url",
							"type": "string",
							"default_value": "",
							"description": "Override the default sample app by providing your own sample deployment URL, which is cloned into the app repo. Note, using clone_if_not_exists mode, so if the app repo already exists the repo contents are unchanged."
						},
						{
							"key": "cd_deployment_repo_clone_to_git_id",
							"type": "string",
							"default_value": "",
							"description": "By default absent, else custom server GUID, or other options for 'git_id' field in the browser UI."
						},
						{
							"key": "cd_deployment_repo_clone_to_git_provider",
							"type": "string",
							"default_value": "",
							"description": "By default 'hostedgit', else use 'githubconsolidated' or 'gitlab'."
						},
						{
							"key": "cd_deployment_repo_existing_branch",
							"type": "string",
							"default_value": "",
							"description": "Used when deployment_repo_existing_url is provided, the default branch that is by the CD build, usually either main or master."
						},
						{
							"key": "cd_deployment_repo_existing_git_id",
							"type": "string",
							"default_value": "",
							"description": "By default absent, else custom server GUID, or other options for 'git_id' field in the browser UI."
						},
						{
							"key": "cd_deployment_repo_existing_git_provider",
							"type": "string",
							"default_value": "hostedgit",
							"description": "By default 'hostedgit', else use 'githubconsolidated' or 'gitlab'."
						},
						{
							"key": "cd_deployment_repo_existing_url",
							"type": "string",
							"default_value": "",
							"description": "Override to bring your own existing deployment repository URL, which is used directly instead of cloning the default deployment sample."
						},
						{
							"key": "cd_deployment_repo_git_token_secret_name",
							"type": "string",
							"default_value": "git-token",
							"description": "Name of the Git token secret in the secret provider."
						},
						{
							"key": "cd_doi_environment",
							"type": "string",
							"default_value": "",
							"description": "DevOps Insights environment for DevSecOps CD deployment."
						},
						{
							"key": "cd_doi_toolchain_id",
							"type": "string",
							"default_value": "",
							"description": "DevOps Insights toolchain ID to link to."
						},
						{
							"key": "cd_emergency_label",
							"type": "string",
							"default_value": "EMERGENCY",
							"description": "Identifies the pull request as an emergency."
						},
						{
							"key": "cd_enable_key_protect",
							"type": "boolean",
							"default_value": "__NULL__",
							"description": "Use the Key Protect integration."
						},
						{
							"key": "cd_enable_secrets_manager",
							"type": "boolean",
							"default_value": "__NULL__",
							"description": "Use the Secrets Manager integration."
						},
						{
							"key": "cd_enable_slack",
							"type": "boolean",
							"default_value": false,
							"description": "Default: false. Set to true to create the integration."
						},
						{
							"key": "cd_evidence_group",
							"type": "string",
							"default_value": "",
							"description": "Specify Git user/group for evidence repository."
						},
						{
							"key": "cd_evidence_repo_auth_type",
							"type": "string",
							"default_value": "oauth",
							"description": "Select the method of authentication that is used to access the Git provider. 'oauth' or 'pat'."
						},
						{
							"key": "cd_evidence_repo_git_token_secret_name",
							"type": "string",
							"default_value": "git-token",
							"description": "Name of the Git token secret in the secret provider."
						},
						{
							"key": "cd_inventory_group",
							"type": "string",
							"default_value": "",
							"description": "Specify Git user/group for inventory repository."
						},
						{
							"key": "cd_inventory_repo_auth_type",
							"type": "string",
							"default_value": "oauth",
							"description": "Select the method of authentication that is used to access the Git provider. 'oauth' or 'pat'."
						},
						{
							"key": "cd_inventory_repo_git_token_secret_name",
							"type": "string",
							"default_value": "git-token",
							"description": "Name of the Git token secret in the secret provider."
						},
						{
							"key": "cd_issues_group",
							"type": "string",
							"default_value": "",
							"description": "Specify Git user/group for issues repository."
						},
						{
							"key": "cd_issues_repo_auth_type",
							"type": "string",
							"default_value": "oauth",
							"description": "Select the method of authentication that is used to access the Git provider. 'oauth' or 'pat'."
						},
						{
							"key": "cd_issues_repo_git_token_secret_name",
							"type": "string",
							"default_value": "git-token",
							"description": "Name of the Git token secret in the secret provider."
						},
						{
							"key": "cd_kp_location",
							"type": "string",
							"default_value": "",
							"description": "IBM Cloud location/region containing the Key Protect instance."
						},
						{
							"key": "cd_kp_name",
							"type": "string",
							"default_value": "",
							"description": "Name of the Key Protect instance where the secrets are stored."
						},
						{
							"key": "cd_kp_resource_group",
							"type": "string",
							"default_value": "",
							"description": "The resource group containing the Key Protect instance for your secrets."
						},
						{
							"key": "cd_link_to_doi_toolchain",
							"type": "boolean",
							"default_value": true,
							"description": "Enable a link to a DevOps Insights instance in another toolchain, true or false."
						},
						{
							"key": "cd_merge_cra_sbom",
							"type": "string",
							"default_value": "1",
							"description": "Merge the SBOM"
						},
						{
							"key": "cd_opt_out_v1_evidence",
							"type": "string",
							"default_value": "1",
							"description": "Opt out of evidence v1."
						},
						{
							"key": "cd_pipeline_config_group",
							"type": "string",
							"default_value": "",
							"description": "Specify user/group for pipeline config repo."
						},
						{
							"key": "cd_pipeline_config_path",
							"type": "string",
							"default_value": ".pipeline-config.yaml",
							"description": "The name and path of the pipeline-config.yaml file within the pipeline-config repo."
						},
						{
							"key": "cd_pipeline_config_repo_auth_type",
							"type": "string",
							"default_value": "oauth",
							"description": "Select the method of authentication that is used to access the Git provider. 'oauth' or 'pat'."
						},
						{
							"key": "cd_pipeline_config_repo_branch",
							"type": "string",
							"default_value": "",
							"description": "Specify the branch containing the custom pipeline-config.yaml file."
						},
						{
							"key": "cd_pipeline_config_repo_clone_from_url",
							"type": "string",
							"default_value": "",
							"description": "Specify a repository containing a custom pipeline-config.yaml file."
						},
						{
							"key": "cd_pipeline_config_repo_existing_url",
							"type": "string",
							"default_value": "",
							"description": "Specify a repository containing a custom pipeline-config.yaml file."
						},
						{
							"key": "cd_pipeline_config_repo_git_token_secret_name",
							"type": "string",
							"default_value": "git-token",
							"description": "Name of the Git token secret in the secret provider."
						},
						{
							"key": "cd_pipeline_debug",
							"type": "string",
							"default_value": "0",
							"description": "'0' by default. Set to '1' to enable debug logging."
						},
						{
							"key": "cd_pipeline_ibmcloud_api_key_secret_name",
							"type": "string",
							"default_value": "ibmcloud-api-key",
							"description": "Name of the Cloud API key secret in the secret provider."
						},
						{
							"key": "cd_repositories_prefix",
							"type": "string",
							"default_value": "compliance",
							"description": "Prefix name for the cloned compliance repos."
						},
						{
							"key": "cd_satellite_cluster_group",
							"type": "string",
							"default_value": "",
							"description": "The Satellite cluster group"
						},
						{
							"key": "cd_scc_enable_scc",
							"type": "boolean",
							"default_value": false,
							"description": "Enable the SCC integration."
						},
						{
							"key": "cd_scc_integration_name",
							"type": "string",
							"default_value": "Security and Compliance",
							"description": "The name of the SCC integration name."
						},
						{
							"key": "cd_slack_channel_name",
							"type": "string",
							"default_value": "my-channel",
							"description": "The Slack channel that notifications are posted to."
						},
						{
							"key": "cd_slack_notifications",
							"type": "string",
							"default_value": "0",
							"description": "The switch to turn the Slack integration on or off."
						},
						{
							"key": "cd_slack_pipeline_fail",
							"type": "boolean",
							"default_value": true,
							"description": "Generate pipeline failed notifications."
						},
						{
							"key": "cd_slack_pipeline_start",
							"type": "boolean",
							"default_value": true,
							"description": "Generate pipeline start notifications."
						},
						{
							"key": "cd_slack_pipeline_success",
							"type": "boolean",
							"default_value": true,
							"description": "Generate pipeline succeeded notifications."
						},
						{
							"key": "cd_slack_team_name",
							"type": "string",
							"default_value": "my-team",
							"description": "The Slack team name, which is the word or phrase before .slack.com in the team URL."
						},
						{
							"key": "cd_slack_toolchain_bind",
							"type": "boolean",
							"default_value": true,
							"description": "Generate tool added to toolchain notifications."
						},
						{
							"key": "cd_slack_toolchain_unbind",
							"type": "boolean",
							"default_value": true,
							"description": "Generate tool removed from toolchain notifications."
						},
						{
							"key": "cd_slack_webhook_secret_name",
							"type": "string",
							"default_value": "slack-webhook",
							"description": "Name of the webhook secret in the secret provider."
						},
						{
							"key": "cd_sm_location",
							"type": "string",
							"default_value": "",
							"description": "IBM Cloud location/region containing the Secrets Manager instance."
						},
						{
							"key": "cd_sm_name",
							"type": "string",
							"default_value": "",
							"description": "Name of the Secrets Manager instance where the secrets are stored."
						},
						{
							"key": "cd_sm_resource_group",
							"type": "string",
							"default_value": "",
							"description": "The resource group containing the Secrets Manager instance for your secrets."
						},
						{
							"key": "cd_sm_secret_group",
							"type": "string",
							"default_value": "",
							"description": "Group in Secrets Manager for organizing/grouping secrets."
						},
						{
							"key": "cd_source_environment",
							"type": "string",
							"default_value": "master",
							"description": "The source environment that the app is promoted from."
						},
						{
							"key": "cd_target_environment",
							"type": "string",
							"default_value": "prod",
							"description": "The target environment that the app is deployed to."
						},
						{
							"key": "cd_target_environment_detail",
							"type": "string",
							"default_value": "",
							"description": "Details of the environment being updated."
						},
						{
							"key": "cd_target_environment_purpose",
							"type": "string",
							"default_value": "production",
							"description": "Purpose of the environment being updated."
						},
						{
							"key": "cd_toolchain_description",
							"type": "string",
							"default_value": "Toolchain created with terraform template for DevSecOps CD Best Practices.",
							"description": "Description for the CD toolchain."
						},
						{
							"key": "cd_toolchain_name",
							"type": "string",
							"default_value": "DevSecOps CD Toolchain - Terraform",
							"description": "The name of the CD Toolchain.",
							"required": true
						},
						{
							"key": "cd_toolchain_region",
							"type": "string",
							"default_value": "",
							"description": "The region containing the CI toolchain."
						},
						{
							"key": "cd_toolchain_resource_group",
							"type": "string",
							"default_value": "",
							"description": "Resource group within which toolchain is created."
						},
						{
							"key": "ci_app_group",
							"type": "string",
							"default_value": "",
							"description": "Specify Git user/group for your application."
						},
						{
							"key": "ci_app_name",
							"type": "string",
							"default_value": "hello-compliance-app",
							"description": "Name of the application image and inventory entry."
						},
						{
							"key": "ci_app_repo_auth_type",
							"type": "string",
							"default_value": "oauth",
							"description": "Select the method of authentication that is used to access the Git provider. 'oauth' or 'pat'."
						},
						{
							"key": "ci_app_repo_clone_from_branch",
							"type": "string",
							"default_value": "",
							"description": "Used when app_repo_clone_from_url is provided, the default branch that is used by the CI build, usually either main or master."
						},
						{
							"key": "ci_app_repo_clone_from_url",
							"type": "string",
							"default_value": "",
							"description": "Override the default sample app by providing your own sample app URL, which is cloned into the app repo. Note, using clone_if_not_exists mode, so if the app repo already exists the repo contents are unchanged."
						},
						{
							"key": "ci_app_repo_clone_to_git_id",
							"type": "string",
							"default_value": "",
							"description": "By default absent, else custom server GUID, or other options for 'git_id' field in the browser UI."
						},
						{
							"key": "ci_app_repo_clone_to_git_provider",
							"type": "string",
							"default_value": "",
							"description": "By default 'hostedgit', else use 'githubconsolidated' or 'gitlab'."
						},
						{
							"key": "ci_app_repo_existing_branch",
							"type": "string",
							"default_value": "",
							"description": "Used when app_repo_existing_url is provided, the default branch that is used by the CI build, usually either main or master."
						},
						{
							"key": "ci_app_repo_existing_git_id",
							"type": "string",
							"default_value": "",
							"description": "By default absent, else custom server GUID, or other options for 'git_id' field in the browser UI."
						},
						{
							"key": "ci_app_repo_existing_git_provider",
							"type": "string",
							"default_value": "",
							"description": "By default 'hostedgit', else use 'githubconsolidated' or 'gitlab'."
						},
						{
							"key": "ci_app_repo_existing_url",
							"type": "string",
							"default_value": "",
							"description": "Override to bring your own existing application repository URL, which is used directly instead of cloning the default sample."
						},
						{
							"key": "ci_app_repo_git_token_secret_name",
							"type": "string",
							"default_value": "git-token",
							"description": "Name of the Git token secret in the secret provider."
						},
						{
							"key": "ci_app_version",
							"type": "string",
							"default_value": "v1",
							"description": "The version of the app to deploy."
						},
						{
							"key": "ci_authorization_policy_creation",
							"type": "string",
							"default_value": "",
							"description": "Disable Toolchain Service to Secrets Manager Service auhorization policy creation."
						},
						{
							"key": "ci_cluster_name",
							"type": "string",
							"default_value": "mycluster-free",
							"description": "Name of the Kubernetes cluster where the application is deployed. (can be the same cluster used for prod)",
							"required": true
						},
						{
							"key": "ci_cluster_namespace",
							"type": "string",
							"default_value": "dev",
							"description": "Name of the Kubernetes cluster namespace where the application is deployed.",
							"required": true
						},
						{
							"key": "ci_code_engine_build_strategy",
							"type": "string",
							"default_value": "",
							"description": "The build strategy for the Code Engine entity. Default strategy is 'dockerfile'. Set as 'buildpacks' for 'buildpacks' build."
						},
						{
							"key": "ci_code_engine_entity_type",
							"type": "string",
							"default_value": "",
							"description": "Type of Code Engine entity to create/update as part of deployment. Default type is 'application'. Set as 'job' for 'job' type."
						},
						{
							"key": "ci_code_engine_project",
							"type": "string",
							"default_value": "DevSecOps_CE",
							"description": "The name of the Code Engine project to use (or create)."
						},
						{
							"key": "ci_code_engine_region",
							"type": "string",
							"default_value": "ibm:yp:us-south",
							"description": "The region to create/lookup for the Code Engine project."
						},
						{
							"key": "ci_code_engine_resource_group",
							"type": "string",
							"default_value": "Default",
							"description": "The resource group of the Code Engine project."
						},
						{
							"key": "ci_code_engine_source",
							"type": "string",
							"default_value": "",
							"description": "The path to the location of code to build in the repository."
						},
						{
							"key": "ci_compliance_base_image",
							"type": "string",
							"default_value": "",
							"description": "Pipeline baseimage to run most of the built-in pipeline code."
						},
						{
							"key": "ci_compliance_pipeline_group",
							"type": "string",
							"default_value": "",
							"description": "Specify user/group for compliance pipline repo."
						},
						{
							"key": "ci_compliance_pipeline_repo_auth_type",
							"type": "string",
							"default_value": "oauth",
							"description": "Select the method of authentication that is used to access the Git provider. 'oauth' or 'pat'."
						},
						{
							"key": "ci_compliance_pipeline_repo_git_token_secret_name",
							"type": "string",
							"default_value": "git-token",
							"description": "Name of the Git token secret in the secret provider."
						},
						{
							"key": "ci_cos_api_key_secret_name",
							"type": "string",
							"default_value": "cos-api-key",
							"description": "Name of the COS API key secret in the secret provider."
						},
						{
							"key": "ci_cos_bucket_name",
							"type": "string",
							"default_value": "",
							"description": "COS bucket name."
						},
						{
							"key": "ci_cos_endpoint",
							"type": "string",
							"default_value": "",
							"description": "COS endpoint name."
						},
						{
							"key": "ci_cra_generate_cyclonedx_format",
							"type": "string",
							"default_value": "1",
							"description": "If set to 1, CRA also generates the BOM in cyclonedx format (defaults to 1)."
						},
						{
							"key": "ci_custom_image_tag",
							"type": "string",
							"default_value": "",
							"description": "The custom tag for the image in a comma-separated list."
						},
						{
							"key": "ci_deployment_target",
							"type": "string",
							"default_value": "cluster",
							"description": "The deployment target, cluster or code-engine."
						},
						{
							"key": "ci_dev_region",
							"type": "string",
							"default_value": "ibm:yp:us-south",
							"description": "Region of the Kubernetes cluster where the application is deployed.",
							"required": true
						},
						{
							"key": "ci_dev_resource_group",
							"type": "string",
							"default_value": "Default",
							"description": "The cluster resource group.",
							"required": true
						},
						{
							"key": "ci_doi_environment",
							"type": "string",
							"default_value": "",
							"description": "The DevOps Insights target environment."
						},
						{
							"key": "ci_doi_toolchain_id",
							"type": "string",
							"default_value": "",
							"description": "DevOps Insights toolchain ID to link to."
						},
						{
							"key": "ci_doi_toolchain_id_pipeline_property",
							"type": "string",
							"default_value": "",
							"description": "The DevOps Insights instance toolchain ID."
						},
						{
							"key": "ci_enable_key_protect",
							"type": "boolean",
							"default_value": "__NULL__",
							"description": "Set to enable Key Protect Integration. "
						},
						{
							"key": "ci_enable_secrets_manager",
							"type": "boolean",
							"default_value": "__NULL__",
							"description": "Set to enable Secrets Manager Integration."
						},
						{
							"key": "ci_enable_slack",
							"type": "boolean",
							"default_value": false,
							"description": "Default: false. Set to true to create the integration."
						},
						{
							"key": "ci_evidence_group",
							"type": "string",
							"default_value": "",
							"description": "Specify Git user/group for evidence repository."
						},
						{
							"key": "ci_evidence_repo_auth_type",
							"type": "string",
							"default_value": "oauth",
							"description": "Select the method of authentication that is used to access the Git provider. 'oauth' or 'pat'."
						},
						{
							"key": "ci_evidence_repo_git_token_secret_name",
							"type": "string",
							"default_value": "git-token",
							"description": "Name of the Git token secret in the secret provider."
						},
						{
							"key": "ci_inventory_group",
							"type": "string",
							"default_value": "",
							"description": "Specify Git user/group for inventory repository."
						},
						{
							"key": "ci_inventory_repo_auth_type",
							"type": "string",
							"default_value": "oauth",
							"description": "Select the method of authentication that is used to access the Git provider. 'oauth' or 'pat'."
						},
						{
							"key": "ci_inventory_repo_git_token_secret_name",
							"type": "string",
							"default_value": "git-token",
							"description": "Name of the Git token secret in the secret provider."
						},
						{
							"key": "ci_issues_group",
							"type": "string",
							"default_value": "",
							"description": "Specify Git user/group for issues repository."
						},
						{
							"key": "ci_issues_repo_auth_type",
							"type": "string",
							"default_value": "oauth",
							"description": "Select the method of authentication that is used to access the Git provider. 'oauth' or 'pat'."
						},
						{
							"key": "ci_issues_repo_git_token_secret_name",
							"type": "string",
							"default_value": "git-token",
							"description": "Name of the Git token secret in the secret provider."
						},
						{
							"key": "ci_kp_location",
							"type": "string",
							"default_value": "",
							"description": "IBM Cloud location/region containing the Key Protect instance."
						},
						{
							"key": "ci_kp_name",
							"type": "string",
							"default_value": "",
							"description": "Name of the Key Protect instance where the secrets are stored."
						},
						{
							"key": "ci_kp_resource_group",
							"type": "string",
							"default_value": "",
							"description": "The resource group containing the Key Protect instance."
						},
						{
							"key": "ci_link_to_doi_toolchain",
							"type": "boolean",
							"default_value": false,
							"description": "Enable a link to a DevOps Insights instance in another toolchain."
						},
						{
							"key": "ci_opt_in_dynamic_api_scan",
							"type": "string",
							"default_value": "1",
							"description": "To enable the OWASP Zap API scan. '1' enable or '0' disable."
						},
						{
							"key": "ci_opt_in_dynamic_scan",
							"type": "string",
							"default_value": "1",
							"description": "To enable the OWASP Zap scan. '1' enable or '0' disable."
						},
						{
							"key": "ci_opt_in_dynamic_ui_scan",
							"type": "string",
							"default_value": "1",
							"description": "To enable the OWASP Zap UI scan. '1' enable or '0' disable."
						},
						{
							"key": "ci_opt_in_sonar",
							"type": "string",
							"default_value": "1",
							"description": "Opt in for Sonarqube"
						},
						{
							"key": "ci_opt_out_v1_evidence",
							"type": "string",
							"default_value": "1",
							"description": "Opt out of Evidence v1"
						},
						{
							"key": "ci_pipeline_config_group",
							"type": "string",
							"default_value": "",
							"description": "Specify user/group for pipeline config repo."
						},
						{
							"key": "ci_pipeline_config_path",
							"type": "string",
							"default_value": ".pipeline-config.yaml",
							"description": "The name and path of the pipeline-config.yaml file within the pipeline-config repo."
						},
						{
							"key": "ci_pipeline_config_repo_auth_type",
							"type": "string",
							"default_value": "oauth",
							"description": "Select the method of authentication that is used to access the Git provider. 'oauth' or 'pat'."
						},
						{
							"key": "ci_pipeline_config_repo_branch",
							"type": "string",
							"default_value": "",
							"description": "Specify the branch containing the custom pipeline-config.yaml file."
						},
						{
							"key": "ci_pipeline_config_repo_clone_from_url",
							"type": "string",
							"default_value": "",
							"description": "Specify a repository containing a custom pipeline-config.yaml file."
						},
						{
							"key": "ci_pipeline_config_repo_existing_url",
							"type": "string",
							"default_value": "",
							"description": "Specify a repository containing a custom pipeline-config.yaml file."
						},
						{
							"key": "ci_pipeline_config_repo_git_token_secret_name",
							"type": "string",
							"default_value": "git-token",
							"description": "Name of the Git token secret in the secret provider."
						},
						{
							"key": "ci_pipeline_debug",
							"type": "string",
							"default_value": "0",
							"description": "'0' by default. Set to '1' to enable debug logging."
						},
						{
							"key": "ci_pipeline_ibmcloud_api_key_secret_name",
							"type": "string",
							"default_value": "ibmcloud-api-key",
							"description": "Name of the Cloud API key secret in the secret provider."
						},
						{
							"key": "ci_registry_namespace",
							"type": "string",
							"default_value": "",
							"description": "A unique namespace within the IBM Cloud Container Registry region where the application image is stored.",
							"required": true
						},
						{
							"key": "ci_registry_region",
							"type": "string",
							"default_value": "ibm:yp:us-south",
							"description": "The IBM Cloud Region where the IBM Cloud Container Registry namespace is to be created.",
							"required": true
						},
						{
							"key": "ci_repositories_prefix",
							"type": "string",
							"default_value": "compliance",
							"description": "Prefix name for the cloned compliance repos."
						},
						{
							"key": "ci_signing_key_secret_name",
							"type": "string",
							"default_value": "signing_key",
							"description": "Name of the signing key secret in the secret provider."
						},
						{
							"key": "ci_slack_channel_name",
							"type": "string",
							"default_value": "my-channel",
							"description": "The Slack channel that notifications are posted to."
						},
						{
							"key": "ci_slack_notifications",
							"type": "string",
							"default_value": "0",
							"description": "The switch that turns the Slack integration on or off."
						},
						{
							"key": "ci_slack_pipeline_fail",
							"type": "boolean",
							"default_value": true,
							"description": "Generate pipeline failed notifications."
						},
						{
							"key": "ci_slack_pipeline_start",
							"type": "boolean",
							"default_value": true,
							"description": "Generate pipeline start notifications."
						},
						{
							"key": "ci_slack_pipeline_success",
							"type": "boolean",
							"default_value": true,
							"description": "Generate pipeline succeeded notifications."
						},
						{
							"key": "ci_slack_team_name",
							"type": "string",
							"default_value": "my-team",
							"description": "The Slack team name, which is the word or phrase before .slack.com in the team URL."
						},
						{
							"key": "ci_slack_toolchain_bind",
							"type": "boolean",
							"default_value": true,
							"description": "Generate tool added to toolchain notifications."
						},
						{
							"key": "ci_slack_toolchain_unbind",
							"type": "boolean",
							"default_value": true,
							"description": "Generate tool removed from toolchain notifications."
						},
						{
							"key": "ci_slack_webhook_secret_name",
							"type": "string",
							"default_value": "slack-webhook",
							"description": "Name of the webhook secret in the secret provider."
						},
						{
							"key": "ci_sm_location",
							"type": "string",
							"default_value": "",
							"description": "IBM Cloud location/region containing the Secrets Manager instance."
						},
						{
							"key": "ci_sm_name",
							"type": "string",
							"default_value": "",
							"description": "Name of the Secrets Manager instance where the secrets are stored."
						},
						{
							"key": "ci_sm_resource_group",
							"type": "string",
							"default_value": "",
							"description": "The resource group containing the Secrets Manager instance."
						},
						{
							"key": "ci_sm_secret_group",
							"type": "string",
							"default_value": "",
							"description": "Group in Secrets Manager for organizing/grouping secrets."
						},
						{
							"key": "ci_sonarqube_config",
							"type": "string",
							"default_value": "default",
							"description": "Runs a SonarQube scan in an isolated Docker-in-Docker container (default configuration) or in an existing Kubernetes cluster (custom configuration). Options: default or custom. Default is default."
						},
						{
							"key": "ci_toolchain_description",
							"type": "string",
							"default_value": "Toolchain created with terraform template for DevSecOps CI Best Practices.",
							"description": "Description for the CI Toolchain."
						},
						{
							"key": "ci_toolchain_name",
							"type": "string",
							"default_value": "DevSecOps CI Toolchain - Terraform",
							"description": "The name of the CI Toolchain.",
							"required": true
						},
						{
							"key": "ci_toolchain_region",
							"type": "string",
							"default_value": "",
							"description": "The region containing the CI toolchain."
						},
						{
							"key": "ci_toolchain_resource_group",
							"type": "string",
							"default_value": "",
							"description": "The resource group within which the toolchain is created."
						},
						{
							"key": "create_cc_toolchain",
							"type": "boolean",
							"default_value": true,
							"description": "Boolean flag which determines if the DevSecOps CC toolchain is created."
						},
						{
							"key": "create_cd_toolchain",
							"type": "boolean",
							"default_value": true,
							"description": "Boolean flag which determines if the DevSecOps CD toolchain is created."
						},
						{
							"key": "create_ci_toolchain",
							"type": "boolean",
							"default_value": true,
							"description": "Flag which determines if the DevSecOps CI toolchain is created. If this toolchain is not created then values must be set for the following variables, evidence_repo_url, issues_repo_url and inventory_repo_url."
						},
						{
							"key": "deployment_repo_url",
							"type": "string",
							"default_value": "",
							"description": "This is the repository to clone deployment for DevSecOps toolchain template."
						},
						{
							"key": "enable_key_protect",
							"type": "boolean",
							"default_value": false,
							"description": "Set to enable Key Protect Integrations. "
						},
						{
							"key": "enable_secrets_manager",
							"type": "boolean",
							"default_value": true,
							"description": "Enable the Secrets Manager integrations."
						},
						{
							"key": "evidence_repo_url",
							"type": "string",
							"default_value": "",
							"description": "This is a template repository to clone compliance-evidence-locker for reference DevSecOps toolchain templates."
						},
						{
							"key": "ibmcloud_api",
							"type": "string",
							"default_value": "https://cloud.ibm.com",
							"description": "IBM Cloud API Endpoint."
						},
						{
							"key": "ibmcloud_api_key",
							"type": "password",
							"description": "API key used to create the toolchains. (See deployment guide.)",
							"required": true
						},
						{
							"key": "inventory_repo_url",
							"type": "string",
							"default_value": "",
							"description": "This is a template repository to clone compliance-inventory for reference DevSecOps toolchain templates."
						},
						{
							"key": "issues_repo_url",
							"type": "string",
							"default_value": "",
							"description": "This is a template repository to clone compliance-issues for reference DevSecOps toolchain templates."
						},
						{
							"key": "kp_location",
							"type": "string",
							"default_value": "us-south",
							"description": "IBM Cloud location/region containing the Key Protect instance."
						},
						{
							"key": "kp_name",
							"type": "string",
							"default_value": "kp-compliance-secrets",
							"description": "Name of the Key Protect instance where the secrets are stored."
						},
						{
							"key": "kp_resource_group",
							"type": "string",
							"default_value": "Default",
							"description": "The resource group containing the Key Protect instance for your secrets."
						},
						{
							"key": "sm_location",
							"type": "string",
							"default_value": "us-south",
							"description": "The region location of the Secrets Manager instance.",
							"required": true
						},
						{
							"key": "sm_name",
							"type": "string",
							"default_value": "sm-instance",
							"description": "The name of the Secret Managers instance.",
							"required": true
						},
						{
							"key": "sm_resource_group",
							"type": "string",
							"default_value": "Default",
							"description": "The resource group containing the Secrets Manager instance.",
							"required": true
						},
						{
							"key": "sm_secret_group",
							"type": "string",
							"default_value": "Default",
							"description": "Group in Secrets Manager for organizing/grouping secrets.",
							"required": true
						},
						{
							"key": "toolchain_region",
							"type": "string",
							"default_value": "us-south",
							"description": "IBM Cloud region where your toolchain is created.",
							"required": true
						},
						{
							"key": "toolchain_resource_group",
							"type": "string",
							"default_value": "Default",
							"description": "The resource group within which the toolchain is created.",
							"required": true
						}
					],
					"outputs": [
						{
							"key": "compliance_cc_toolchain_id",
							"description": "The ID of the Compliance CC Toolchain"
						},
						{
							"key": "evidence_repo_url",
							"description": "The Evidence Repo URL"
						},
						{
							"key": "issues_repo_url",
							"description": "The Issues Repo URL"
						},
						{
							"key": "inventory_repo_url",
							"description": "The Inventory Repo URL"
						},
						{
							"key": "app_repo_url",
							"description": "The App Repo URL"
						},
						{
							"key": "compliance_ci_toolchain_id",
							"description": "The ID of the Compliance CI Toolchain"
						},
						{
							"key": "compliance_cd_toolchain_id",
							"description": "The ID of the Compliance CD Toolchain"
						}
					],
					"install_type": "fullstack"
				}
			]
		}
	]
}
